/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package picasinolauncher;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import networking.LauncherNetworkHandler;
import networking.User;

/**
 *
 * @author Phil-Custom
 */
public class PiCasinoLauncherUILogin extends javax.swing.JFrame {
    
    private boolean skipAuthentication;
    private boolean isNewUser;
    private PiCasinoLauncher launcher;

    /**
     * Creates new form PiCasinoLauncherUI
     * @param l
     */
    public PiCasinoLauncherUILogin(PiCasinoLauncher l) {
        launcher = l;
        skipAuthentication = false;
        isNewUser = false;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelUsername = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        textFieldUsername = new javax.swing.JTextField();
        passwordFieldPassword = new javax.swing.JPasswordField();
        buttonExit = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();
        buttonLogin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        checkBoxSkipAuth = new javax.swing.JCheckBox();
        checkBoxRegister = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PiCasino Launcher");

        labelUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelUsername.setText("Password:");

        labelPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelPassword.setText("Username:");

        textFieldUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textFieldUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldUsernameActionPerformed(evt);
            }
        });

        passwordFieldPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passwordFieldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldPasswordActionPerformed(evt);
            }
        });

        buttonExit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonExit.setText("Exit");
        buttonExit.setPreferredSize(new java.awt.Dimension(75, 50));
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        buttonClear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonClear.setText("Clear");
        buttonClear.setPreferredSize(new java.awt.Dimension(70, 50));
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        buttonLogin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonLogin.setText("Login");
        buttonLogin.setPreferredSize(new java.awt.Dimension(70, 50));
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoginActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("PiCasino");

        checkBoxSkipAuth.setText("Skip Authentication");
        checkBoxSkipAuth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxSkipAuthActionPerformed(evt);
            }
        });

        checkBoxRegister.setText("Register Account");
        checkBoxRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxRegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordFieldPassword))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(checkBoxRegister)
                                        .addGap(28, 28, 28)
                                        .addComponent(checkBoxSkipAuth)
                                        .addGap(48, 48, 48)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(106, 106, 106))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxSkipAuth)
                    .addComponent(checkBoxRegister))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldUsernameActionPerformed

    private void passwordFieldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldPasswordActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        // Just exit
        System.exit(0);
    }//GEN-LAST:event_buttonExitActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        /* Clear Username */
        textFieldUsername.setText("");
        /* Clear Password */
        passwordFieldPassword.setText("");
    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoginActionPerformed
        PiCasinoLauncher.LOGGER.info("Attempting to handle a user login.");
        
        if(isNewUser){
            launcher.laucnhRegisterUI();
            this.setVisible(false);
            skipAuthentication = true;
        }

        /* Create User Object */
        User user = launcher.getUser();
        user.setUsername(textFieldUsername.getText());
        user.setPassword(passwordFieldPassword.getText());
        
        if(!skipAuthentication){
            LauncherNetworkHandler network = launcher.getNetworkHandler();
            /* Verify login */
            //launcher.getNetworkHandler().sendUser(user);
            try {
                /* Sleep for 5 seconds here to ensure server has time to authenticate */
                Thread.sleep(5000);
            } catch (InterruptedException ex) {
                PiCasinoLauncher.LOGGER.severe("Sleep interrupted!");
            }
            /* If login was a success, hide this window */
            if(user.isAuthenticated()){
                this.setVisible(false);
                launcher.setUser(user);
                /* Launch PiCasino */
                launcher.launchPiCasino();
            }
            JOptionPane.showMessageDialog(null, "Login Failed!  Try again.");
            /* Clear Username */
            textFieldUsername.setText("");
            /* Clear Password */
            passwordFieldPassword.setText("");     
        }
        
        if(!isNewUser){
            this.setVisible(false);
            launcher.launchPiCasino();
        }
    }//GEN-LAST:event_buttonLoginActionPerformed

    private void checkBoxSkipAuthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxSkipAuthActionPerformed
        skipAuthentication = !skipAuthentication;
    }//GEN-LAST:event_checkBoxSkipAuthActionPerformed

    private void checkBoxRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxRegisterActionPerformed
        isNewUser = !isNewUser;
    }//GEN-LAST:event_checkBoxRegisterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonLogin;
    private javax.swing.JCheckBox checkBoxRegister;
    private javax.swing.JCheckBox checkBoxSkipAuth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JPasswordField passwordFieldPassword;
    private javax.swing.JTextField textFieldUsername;
    // End of variables declaration//GEN-END:variables
}
